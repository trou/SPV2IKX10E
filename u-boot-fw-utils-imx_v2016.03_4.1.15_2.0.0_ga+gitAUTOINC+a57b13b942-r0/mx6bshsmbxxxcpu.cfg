/*------------------------------------------------------------------------------
  Copyright 2018 BSH Hausgeraete GmbH

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

  1. Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

  3. Neither the name of the copyright holder nor the names of its
     contributors may be used to endorse or promote products derived from this
     software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
------------------------------------------------------------------------------*/


#define __ASSEMBLY__
#include <config.h>

/*
#####################################################################
#                                                                   #
#                            SMB                                    #
#                                                                   #
#####################################################################
*/


/* image version */

IMAGE_VERSION 2

/*
 * Boot Device : one of
 * spi/sd/nand/onenand, qspi/nor
 */

#ifdef CONFIG_SYS_BOOT_QSPI
BOOT_FROM	qspi
#elif defined(CONFIG_SYS_BOOT_EIMNOR)
BOOT_FROM	nor
#else
BOOT_FROM	nand
#endif

#ifdef CONFIG_USE_PLUGIN
/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
PLUGIN	board/freescale/mx6ullevk/plugin.bin 0x00907000
#else

#ifdef CONFIG_SECURE_BOOT
CSF CONFIG_CSF_SIZE
#endif

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *	Addr-type register length (1,2 or 4 bytes)
 *	Address	  absolute address of the register
 *	value	  value to be stored in the register
 */

/* Enable all clocks */
DATA 4 0x020C4068 0xFFFFFFFF
DATA 4 0x020C406C 0xFFFFFFFF
DATA 4 0x020C4070 0xFFFFFFFF
DATA 4 0x020C4074 0xFFFFFFFF
DATA 4 0x020C4078 0xFFFFFFFF
DATA 4 0x020C407C 0xFFFFFFFF
DATA 4 0x020C4080 0xFFFFFFFF

/* Set CPU frequency to 528 MHz */
DATA 4 0x020C8000 0x00002058


//DDR IO TYPE:
DATA 4 0x020E04B4 0x000C0000 // IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE
DATA 4 0x020E04AC 0x00000000 // IOMUXC_SW_PAD_CTL_GRP_DDRPKE

//CLOCK:
DATA 4 0x020E027C 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0

//ADDRESS:
DATA 4 0x020E0250 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
DATA 4 0x020E024C 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
DATA 4 0x020E0490 0x00000028 // IOMUXC_SW_PAD_CTL_GRP_ADDDS

//CONTROL:
DATA 4 0x020E0288 0x000C0028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET
DATA 4 0x020E0270 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4 0x020E0260 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
DATA 4 0x020E0264 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
DATA 4 0x020E04A0 0x00000028 // IOMUXC_SW_PAD_CTL_GRP_CTLDS

//DATA STROBES:
DATA 4 0x020E0494 0x00020000 // IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL
DATA 4 0x020E0280 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0
DATA 4 0x020E0284 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1

//DATA:
DATA 4 0x020E04B0 0x00020000 // IOMUXC_SW_PAD_CTL_GRP_DDRMODE
DATA 4 0x020E0498 0x00000028 // IOMUXC_SW_PAD_CTL_GRP_B0DS
DATA 4 0x020E04A4 0x00000028 // IOMUXC_SW_PAD_CTL_GRP_B1DS

DATA 4 0x020E0244 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DATA 4 0x020E0248 0x00000028 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1

DATA 4 0x021B001C 0x00008000 // MMDC0_MDSCR, set the Configuration request bit during MMDC set up

//=============================================================================
// Calibration setup.
//=============================================================================
DATA 4 0x021B0800 0xA1390003 // DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.

DATA 4 0x021B080C 0x00250025 //MMDC_MPWLDECTRL0 ch0
/* DATA 4 0x021B0810 0x00060006 //MMDC_MPWLDECTRL1 ch0  */

//Read DQS Gating calibration
DATA 4 0x021B083C 0x02040200 //MPDGCTRL0 PHY0
DATA 4 0x021B0840 0x00000000 //MPDGCTRL1 PHY0

//Read calibration
DATA 4 0x021B0848 0x40403236	// MPRDDLCTL PHY0

//Write calibration
DATA 4 0x021B0850 0x4040342E	// MPWRDLCTL PHY0

//read data bit delay: (3 is the reccommended default value, although out of reset value is 0)
DATA 4 0x021B081C 0x33333333	// MMDC_MPRDDQBY0DL
DATA 4 0x021B0820 0x33333333	// MMDC_MPRDDQBY1DL

//write data bit delay
DATA 4 0x021B082C 0xF3333333	// MMDC_MPWRDQBY0DL
DATA 4 0x021B0830 0xF3333333	// MMDC_MPWRDQBY1DL

//DQS&CLK Duty Cycle
DATA 4 0x021B08C0 0x00944009 // [MMDC_MPDCCR] MMDC Duty Cycle Control Register

// Complete calibration by forced measurement
DATA 4 0x021B08B8 0x00000800 // DDR_PHY_P0_MPMUR0, frc_msr
//=============================================================================
// Calibration setup end
//=============================================================================

//MMDC init
DATA 4 0x021B0004 0x0002002D // MMDC0_MDPDC
DATA 4 0x021B0008 0x1B333030 // MMDC0_MDOTC
DATA 4 0x021B000C 0x2B2F5333 // MMDC0_MDCFG0
DATA 4 0x021B0010 0x924D0B63 // MMDC0_MDCFG1
DATA 4 0x021B0014 0x01FF00DB // MMDC0_MDCFG2

//MDMISC: RALAT kept to the high level of 5.
//MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits:
//a. better operation at low frequency, for LPDDR2 freq < 100MHz, change RALAT to 3
//b. Small performence improvment
DATA 4 0x021B0018 0x00211740 // MMDC0_MDMISC
DATA 4 0x021B001C 0x00008000 // MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DATA 4 0x021B002C 0x000026D2 // MMDC0_MDRWD
DATA 4 0x021B0030 0x002F1023 // MMDC0_MDOR
DATA 4 0x021B0040 0x00000043 // Chan0 CS0_END
DATA 4 0x021B0000 0x82180000 // MMDC0_MDCTL

DATA 4 0x021B0890 0x00400000 // MPPDCMPR2

//Mode register writes
DATA 4 0x021B001C 0x02008032 // MMDC0_MDSCR, MR2 write, CS0
DATA 4 0x021B001C 0x00008033 // MMDC0_MDSCR, MR3 write, CS0
DATA 4 0x021B001C 0x00048031 // MMDC0_MDSCR, MR1 write, CS0
DATA 4 0x021B001C 0x15208030 // MMDC0_MDSCR, MR0 write, CS0
DATA 4 0x021B001C 0x04008040 // MMDC0_MDSCR, ZQ calibration command sent to device on CS0

//DATA 4 0x021B001C 0x0200803A	// MMDC0_MDSCR, MR2 write, CS1
//DATA 4 0x021B001C 0x0000803B	// MMDC0_MDSCR, MR3 write, CS1
//DATA 4 0x021B001C 0x00048039	// MMDC0_MDSCR, MR1 write, CS1
//DATA 4 0x021B001C 0x15108038	// MMDC0_MDSCR, MR0 write, CS1
//DATA 4 0x021B001C 0x04008048	// MMDC0_MDSCR, ZQ calibration command sent to device on CS1

DATA 4 0x021B0020 0x00007800 // MMDC0_MDREF

DATA 4 0x021B0818 0x00000227 // DDR_PHY_P0_MPODTCTRL

DATA 4 0x021B0004 0x0002552D // MMDC0_MDPDC now SDCTL power down enabled

DATA 4 0x021B0404 0x00011006 // MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.

DATA 4 0x021B001C 0x00000000 // MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)

#endif
